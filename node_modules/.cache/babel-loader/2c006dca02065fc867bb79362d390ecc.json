{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Desktop/01-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // const nameInputRef = useRef('')\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredEmailisValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(enteredEmail);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n  const emailInputIsInvalid = !enteredEmailisValid && enteredEmailIsTouched;\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailisValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid, enteredEmailisValid]);\n\n  const ChangeHandler = e => {\n    if (e.target.id === 'name') {\n      setEnteredName(e.target.value);\n    }\n\n    if (e.target.id === 'email') {\n      setEnteredEmail(e.target.value);\n    }\n  };\n\n  const FormSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (e.target.id === 'name') {\n      setEnteredNameIsTouched(true);\n    } else if (e.target.id === 'email') {\n      setEnteredEmailIsTouched(true);\n    }\n\n    if (!enteredNameIsValid || !enteredEmailisValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameIsTouched(false);\n    setEnteredEmailIsTouched(false);\n  };\n\n  const BlurHandler = () => {\n    if (enteredNameIsValid) {\n      setEnteredNameIsTouched(true);\n    }\n\n    if (enteredEmailisValid) {\n      setEnteredEmailIsTouched(true);\n    }\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: FormSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: BlurHandler,\n        onChange: ChangeHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: BlurHandler,\n        onChange: ChangeHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), emailInputClasses && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"z8uTW+EXNnDzU8kAAJbBczlWnXI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameIsTouched","setEnteredNameIsTouched","enteredEmailIsTouched","setEnteredEmailIsTouched","formIsValid","setFormIsValid","enteredEmailisValid","test","enteredNameIsValid","trim","nameInputIsInvalid","emailInputIsInvalid","ChangeHandler","e","target","id","value","FormSubmissionHandler","preventDefault","BlurHandler","nameInputClasses","emailInputClasses"],"sources":["/Users/orkhan/Desktop/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n\n  // const nameInputRef = useRef('')\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredEmailisValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(enteredEmail)\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n  const emailInputIsInvalid = !enteredEmailisValid && enteredEmailIsTouched;\n\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailisValid) {\n      setFormIsValid(true)\n    } else {\n      setFormIsValid(false)\n    }\n  }, [enteredNameIsValid, enteredEmailisValid])\n\n  const ChangeHandler = (e) => {\n\n    if (e.target.id === 'name') {\n      setEnteredName(e.target.value);\n    }\n\n    if (e.target.id === 'email') {\n      setEnteredEmail(e.target.value)\n    }\n\n  }\n\n  const FormSubmissionHandler = (e) => {\n\n    e.preventDefault();\n\n    if (e.target.id==='name') {\n      \n      setEnteredNameIsTouched(true)\n      \n    } else if (e.target.id==='email') {\n      setEnteredEmailIsTouched(true)\n    }\n\n\n    if (!enteredNameIsValid || !enteredEmailisValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameIsTouched(false)\n    setEnteredEmailIsTouched(false)\n  }\n\n  const BlurHandler = () => {\n    if (enteredNameIsValid) {\n      setEnteredNameIsTouched(true)\n    }\n    if (enteredEmailisValid) {\n      setEnteredEmailIsTouched(true)\n    }\n\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={FormSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          onBlur={BlurHandler}\n          onChange={ChangeHandler}\n          value={enteredName}\n          type='text'\n          id='name'\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Invalid</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          onBlur={BlurHandler}\n          onChange={ChangeHandler}\n          value={enteredEmail}\n          type='email'\n          id='email'\n        />\n        {emailInputClasses && <p className=\"error-text\">Invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}