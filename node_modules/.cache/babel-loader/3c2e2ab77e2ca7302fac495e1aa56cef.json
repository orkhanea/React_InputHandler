{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Desktop/01-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use.input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(value => {\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\n  }); // const nameInputRef = useRef('')\n  // const [enteredName, setEnteredName] = useState('');\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  // const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  const [formIsValid, setFormIsValid] = useState(false); // const enteredEmailisValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(enteredEmail)\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n  const emailInputIsInvalid = !enteredEmailisValid && enteredEmailIsTouched;\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailisValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid, enteredEmailisValid]); // const ChangeHandler = (e) => {\n  //   if (e.target.id === 'name') {\n  //     setEnteredName(e.target.value);\n  //   }\n  //   if (e.target.id === 'email') {\n  //     setEnteredEmail(e.target.value)\n  //   }\n  // }\n\n  const FormSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (e.target.id === 'name') {\n      setEnteredNameIsTouched(true);\n    } else if (e.target.id === 'email') {\n      setEnteredEmailIsTouched(true);\n    }\n\n    if (!enteredNameIsValid || !enteredEmailisValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameIsTouched(false);\n    setEnteredEmailIsTouched(false);\n  }; // const BlurHandler = (e) => {\n  //   if (e.target.id==='name') {\n  //     setEnteredNameIsTouched(true)\n  //   }\n  //   if (e.target.id==='email') {\n  //     setEnteredEmailIsTouched(true)\n  //   }\n  // }\n\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: FormSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: nameBlurHandler,\n        onChange: nameChangeHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: emailBlurHandler,\n        onChange: emailChangeHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"VM0+E/HmzHcoyKdDF6zNYjnEL9I=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","emailInputHasError","emailChangeHandler","emailBlurHandler","test","formIsValid","setFormIsValid","nameInputIsInvalid","enteredNameIsValid","enteredNameIsTouched","emailInputIsInvalid","enteredEmailisValid","enteredEmailIsTouched","FormSubmissionHandler","e","preventDefault","target","id","setEnteredNameIsTouched","setEnteredEmailIsTouched","setEnteredName","setEnteredEmail","nameInputClasses","emailInputClasses"],"sources":["/Users/orkhan/Desktop/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use.input\";\n\nconst SimpleInput = (props) => {\n\n  const {value: enteredName, hasError: nameInputHasError, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler} = useInput(value=>value.trim()!=='')\n  const {value: enteredEmail, hasError: emailInputHasError, valueChangeHandler: emailChangeHandler, inputBlurHandler: emailBlurHandler} = useInput(value=>{/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)})\n\n  // const nameInputRef = useRef('')\n  // const [enteredName, setEnteredName] = useState('');\n  // const [enteredEmail, setEnteredEmail] = useState('');\n\n  // const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  // const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n  \n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // const enteredEmailisValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(enteredEmail)\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  \n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n  const emailInputIsInvalid = !enteredEmailisValid && enteredEmailIsTouched;\n\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailisValid) {\n      setFormIsValid(true)\n    } else {\n      setFormIsValid(false)\n    }\n  }, [enteredNameIsValid, enteredEmailisValid])\n\n  // const ChangeHandler = (e) => {\n\n  //   if (e.target.id === 'name') {\n  //     setEnteredName(e.target.value);\n  //   }\n\n  //   if (e.target.id === 'email') {\n  //     setEnteredEmail(e.target.value)\n  //   }\n\n  // }\n\n  const FormSubmissionHandler = (e) => {\n\n    e.preventDefault();\n\n    if (e.target.id==='name') {\n      \n      setEnteredNameIsTouched(true)\n      \n    } else if (e.target.id==='email') {\n      setEnteredEmailIsTouched(true)\n    }\n\n\n    if (!enteredNameIsValid || !enteredEmailisValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameIsTouched(false)\n    setEnteredEmailIsTouched(false)\n  }\n\n  // const BlurHandler = (e) => {\n  //   if (e.target.id==='name') {\n  //     setEnteredNameIsTouched(true)\n  //   }\n  //   if (e.target.id==='email') {\n  //     setEnteredEmailIsTouched(true)\n  //   }\n\n  // }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={FormSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          onBlur={nameBlurHandler}\n          onChange={nameChangeHandler}\n          value={enteredName}\n          type='text'\n          id='name'\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Invalid</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          onBlur={emailBlurHandler}\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          type='email'\n          id='email'\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE7B,MAAM;IAACC,KAAK,EAAEC,WAAR;IAAqBC,QAAQ,EAAEC,iBAA/B;IAAkDC,kBAAkB,EAAEC,iBAAtE;IAAyFC,gBAAgB,EAAEC;EAA3G,IAA8HV,QAAQ,CAACG,KAAK,IAAEA,KAAK,CAACQ,IAAN,OAAe,EAAvB,CAA5I;EACA,MAAM;IAACR,KAAK,EAAES,YAAR;IAAsBP,QAAQ,EAAEQ,kBAAhC;IAAoDN,kBAAkB,EAAEO,kBAAxE;IAA4FL,gBAAgB,EAAEM;EAA9G,IAAkIf,QAAQ,CAACG,KAAK,IAAE;IAAC,gDAAgDa,IAAhD,CAAqDb,KAArD;EAA4D,CAArE,CAAhJ,CAH6B,CAK7B;EACA;EACA;EAEA;EACA;;EAEA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C,CAZ6B,CAc7B;EACA;;EAEA,MAAMqB,kBAAkB,GAAG,CAACC,kBAAD,IAAuBC,oBAAlD;EACA,MAAMC,mBAAmB,GAAG,CAACC,mBAAD,IAAwBC,qBAApD;EAEAzB,SAAS,CAAC,MAAM;IACd,IAAIqB,kBAAkB,IAAIG,mBAA1B,EAA+C;MAC7CL,cAAc,CAAC,IAAD,CAAd;IACD,CAFD,MAEO;MACLA,cAAc,CAAC,KAAD,CAAd;IACD;EACF,CANQ,EAMN,CAACE,kBAAD,EAAqBG,mBAArB,CANM,CAAT,CApB6B,CA4B7B;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;;EAEA,MAAME,qBAAqB,GAAIC,CAAD,IAAO;IAEnCA,CAAC,CAACC,cAAF;;IAEA,IAAID,CAAC,CAACE,MAAF,CAASC,EAAT,KAAc,MAAlB,EAA0B;MAExBC,uBAAuB,CAAC,IAAD,CAAvB;IAED,CAJD,MAIO,IAAIJ,CAAC,CAACE,MAAF,CAASC,EAAT,KAAc,OAAlB,EAA2B;MAChCE,wBAAwB,CAAC,IAAD,CAAxB;IACD;;IAGD,IAAI,CAACX,kBAAD,IAAuB,CAACG,mBAA5B,EAAiD;MAC/C;IACD;;IACDS,cAAc,CAAC,EAAD,CAAd;IACAC,eAAe,CAAC,EAAD,CAAf;IACAH,uBAAuB,CAAC,KAAD,CAAvB;IACAC,wBAAwB,CAAC,KAAD,CAAxB;EACD,CApBD,CAxC6B,CA8D7B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EAEA,MAAMG,gBAAgB,GAAGf,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;EACA,MAAMgB,iBAAiB,GAAGb,mBAAmB,GAAG,sBAAH,GAA4B,cAAzE;EACA,oBACE;IAAM,QAAQ,EAAEG,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAES,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,MAAM,EAAExB,eADV;QAEE,QAAQ,EAAEF,iBAFZ;QAGE,KAAK,EAAEJ,WAHT;QAIE,IAAI,EAAC,MAJP;QAKE,EAAE,EAAC;MALL;QAAA;QAAA;QAAA;MAAA,QAFF,EASGe,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAEgB,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,MAAM,EAAEpB,gBADV;QAEE,QAAQ,EAAED,kBAFZ;QAGE,KAAK,EAAEF,YAHT;QAIE,IAAI,EAAC,OAJP;QAKE,EAAE,EAAC;MALL;QAAA;QAAA;QAAA;MAAA,QAFF,EASGU,mBAAmB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAT1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,eAuBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACL,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAvGD;;GAAMhB,W;UAEgID,Q,EACIA,Q;;;KAHpIC,W;AAyGN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}